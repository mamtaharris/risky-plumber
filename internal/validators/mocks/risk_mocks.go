// Code generated by MockGen. DO NOT EDIT.
// Source: risk.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	requests "github.com/mamtaharris/risky-plumber/internal/models/requests"
)

// MockRiskReqValidatorInterface is a mock of RiskReqValidatorInterface interface.
type MockRiskReqValidatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRiskReqValidatorInterfaceMockRecorder
}

// MockRiskReqValidatorInterfaceMockRecorder is the mock recorder for MockRiskReqValidatorInterface.
type MockRiskReqValidatorInterfaceMockRecorder struct {
	mock *MockRiskReqValidatorInterface
}

// NewMockRiskReqValidatorInterface creates a new mock instance.
func NewMockRiskReqValidatorInterface(ctrl *gomock.Controller) *MockRiskReqValidatorInterface {
	mock := &MockRiskReqValidatorInterface{ctrl: ctrl}
	mock.recorder = &MockRiskReqValidatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRiskReqValidatorInterface) EXPECT() *MockRiskReqValidatorInterfaceMockRecorder {
	return m.recorder
}

// ValidateCreateRiskReq mocks base method.
func (m *MockRiskReqValidatorInterface) ValidateCreateRiskReq(ctx *gin.Context) (requests.RiskReq, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCreateRiskReq", ctx)
	ret0, _ := ret[0].(requests.RiskReq)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateCreateRiskReq indicates an expected call of ValidateCreateRiskReq.
func (mr *MockRiskReqValidatorInterfaceMockRecorder) ValidateCreateRiskReq(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCreateRiskReq", reflect.TypeOf((*MockRiskReqValidatorInterface)(nil).ValidateCreateRiskReq), ctx)
}

// ValidateGetAllRiskReq mocks base method.
func (m *MockRiskReqValidatorInterface) ValidateGetAllRiskReq(ctx *gin.Context) (requests.PaginationReq, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateGetAllRiskReq", ctx)
	ret0, _ := ret[0].(requests.PaginationReq)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateGetAllRiskReq indicates an expected call of ValidateGetAllRiskReq.
func (mr *MockRiskReqValidatorInterfaceMockRecorder) ValidateGetAllRiskReq(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateGetAllRiskReq", reflect.TypeOf((*MockRiskReqValidatorInterface)(nil).ValidateGetAllRiskReq), ctx)
}

// ValidateGetRiskReq mocks base method.
func (m *MockRiskReqValidatorInterface) ValidateGetRiskReq(ctx *gin.Context) (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateGetRiskReq", ctx)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateGetRiskReq indicates an expected call of ValidateGetRiskReq.
func (mr *MockRiskReqValidatorInterfaceMockRecorder) ValidateGetRiskReq(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateGetRiskReq", reflect.TypeOf((*MockRiskReqValidatorInterface)(nil).ValidateGetRiskReq), ctx)
}
